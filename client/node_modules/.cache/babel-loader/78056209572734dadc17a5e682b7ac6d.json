{"ast":null,"code":"var domToReact = require('./lib/dom-to-react');\n\nvar htmlToDOM = require('html-dom-parser'); // decode HTML entities by default for `htmlparser2`\n\n\nvar domParserOptions = {\n  decodeEntities: true,\n  lowerCaseAttributeNames: false\n};\n/**\r\n * Converts HTML string to React elements.\r\n *\r\n * @param  {String}   html                    - The HTML string to parse to React.\r\n * @param  {Object}   [options]               - The parser options.\r\n * @param  {Function} [options.replace]       - The replace method.\r\n * @return {JSX.Element|JSX.Element[]|String} - Returns React element(s), string, or empty array.\r\n */\n\nfunction HTMLReactParser(html, options) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  return domToReact(htmlToDOM(html, domParserOptions), options);\n}\n\nHTMLReactParser.domToReact = domToReact;\nHTMLReactParser.htmlToDOM = htmlToDOM; // support CommonJS and ES Modules\n\nmodule.exports = HTMLReactParser;\nmodule.exports.default = HTMLReactParser;","map":{"version":3,"sources":["C:/Users/Kable/Documents/Capstone/client/node_modules/html-react-parser/index.js"],"names":["domToReact","require","htmlToDOM","domParserOptions","decodeEntities","lowerCaseAttributeNames","HTMLReactParser","html","options","TypeError","module","exports","default"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,oBAAD,CAAxB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,iBAAD,CAAvB,C,CAEA;;;AACA,IAAIE,gBAAgB,GAAG;AAAEC,EAAAA,cAAc,EAAE,IAAlB;AAAwBC,EAAAA,uBAAuB,EAAE;AAAjD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,OAA/B,EAAwC;AACtC,MAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAIE,SAAJ,CAAc,iCAAd,CAAN;AACD;;AACD,SAAOT,UAAU,CAACE,SAAS,CAACK,IAAD,EAAOJ,gBAAP,CAAV,EAAoCK,OAApC,CAAjB;AACD;;AAEDF,eAAe,CAACN,UAAhB,GAA6BA,UAA7B;AACAM,eAAe,CAACJ,SAAhB,GAA4BA,SAA5B,C,CAEA;;AACAQ,MAAM,CAACC,OAAP,GAAiBL,eAAjB;AACAI,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBN,eAAzB","sourcesContent":["var domToReact = require('./lib/dom-to-react');\r\nvar htmlToDOM = require('html-dom-parser');\r\n\r\n// decode HTML entities by default for `htmlparser2`\r\nvar domParserOptions = { decodeEntities: true, lowerCaseAttributeNames: false };\r\n\r\n/**\r\n * Converts HTML string to React elements.\r\n *\r\n * @param  {String}   html                    - The HTML string to parse to React.\r\n * @param  {Object}   [options]               - The parser options.\r\n * @param  {Function} [options.replace]       - The replace method.\r\n * @return {JSX.Element|JSX.Element[]|String} - Returns React element(s), string, or empty array.\r\n */\r\nfunction HTMLReactParser(html, options) {\r\n  if (typeof html !== 'string') {\r\n    throw new TypeError('First argument must be a string');\r\n  }\r\n  return domToReact(htmlToDOM(html, domParserOptions), options);\r\n}\r\n\r\nHTMLReactParser.domToReact = domToReact;\r\nHTMLReactParser.htmlToDOM = htmlToDOM;\r\n\r\n// support CommonJS and ES Modules\r\nmodule.exports = HTMLReactParser;\r\nmodule.exports.default = HTMLReactParser;\r\n"]},"metadata":{},"sourceType":"script"}