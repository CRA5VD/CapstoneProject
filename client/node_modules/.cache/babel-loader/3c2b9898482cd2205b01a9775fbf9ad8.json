{"ast":null,"code":"var domparser = require('./domparser');\n\nvar utilities = require('./utilities');\n\nvar formatDOM = utilities.formatDOM;\nvar isIE9 = utilities.isIE(9);\nvar DIRECTIVE_REGEX = /<(![a-zA-Z\\s]+)>/; // e.g., <!doctype html>\n\n/**\r\n * Parses HTML and reformats DOM nodes output.\r\n *\r\n * @param  {String} html - The HTML string.\r\n * @return {Array}       - The formatted DOM nodes.\r\n */\n\nfunction parseDOM(html) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!html) {\n    return [];\n  } // match directive\n\n\n  var match = html.match(DIRECTIVE_REGEX);\n  var directive;\n\n  if (match && match[1]) {\n    directive = match[1]; // remove directive in IE9 because DOMParser uses\n    // MIME type 'text/xml' instead of 'text/html'\n\n    if (isIE9) {\n      html = html.replace(match[0], '');\n    }\n  }\n\n  return formatDOM(domparser(html), null, directive);\n}\n\nmodule.exports = parseDOM;","map":{"version":3,"sources":["C:/Users/Kable/Documents/Capstone/client/node_modules/html-dom-parser/lib/html-to-dom-client.js"],"names":["domparser","require","utilities","formatDOM","isIE9","isIE","DIRECTIVE_REGEX","parseDOM","html","TypeError","match","directive","replace","module","exports"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAvB;;AAEA,IAAIE,SAAS,GAAGD,SAAS,CAACC,SAA1B;AACA,IAAIC,KAAK,GAAGF,SAAS,CAACG,IAAV,CAAe,CAAf,CAAZ;AAEA,IAAIC,eAAe,GAAG,kBAAtB,C,CAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAIC,SAAJ,CAAc,iCAAd,CAAN;AACD;;AAED,MAAI,CAACD,IAAL,EAAW;AACT,WAAO,EAAP;AACD,GAPqB,CAStB;;;AACA,MAAIE,KAAK,GAAGF,IAAI,CAACE,KAAL,CAAWJ,eAAX,CAAZ;AACA,MAAIK,SAAJ;;AAEA,MAAID,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAlB,EAAuB;AACrBC,IAAAA,SAAS,GAAGD,KAAK,CAAC,CAAD,CAAjB,CADqB,CAGrB;AACA;;AACA,QAAIN,KAAJ,EAAW;AACTI,MAAAA,IAAI,GAAGA,IAAI,CAACI,OAAL,CAAaF,KAAK,CAAC,CAAD,CAAlB,EAAuB,EAAvB,CAAP;AACD;AACF;;AAED,SAAOP,SAAS,CAACH,SAAS,CAACQ,IAAD,CAAV,EAAkB,IAAlB,EAAwBG,SAAxB,CAAhB;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBP,QAAjB","sourcesContent":["var domparser = require('./domparser');\r\nvar utilities = require('./utilities');\r\n\r\nvar formatDOM = utilities.formatDOM;\r\nvar isIE9 = utilities.isIE(9);\r\n\r\nvar DIRECTIVE_REGEX = /<(![a-zA-Z\\s]+)>/; // e.g., <!doctype html>\r\n\r\n/**\r\n * Parses HTML and reformats DOM nodes output.\r\n *\r\n * @param  {String} html - The HTML string.\r\n * @return {Array}       - The formatted DOM nodes.\r\n */\r\nfunction parseDOM(html) {\r\n  if (typeof html !== 'string') {\r\n    throw new TypeError('First argument must be a string');\r\n  }\r\n\r\n  if (!html) {\r\n    return [];\r\n  }\r\n\r\n  // match directive\r\n  var match = html.match(DIRECTIVE_REGEX);\r\n  var directive;\r\n\r\n  if (match && match[1]) {\r\n    directive = match[1];\r\n\r\n    // remove directive in IE9 because DOMParser uses\r\n    // MIME type 'text/xml' instead of 'text/html'\r\n    if (isIE9) {\r\n      html = html.replace(match[0], '');\r\n    }\r\n  }\r\n\r\n  return formatDOM(domparser(html), null, directive);\r\n}\r\n\r\nmodule.exports = parseDOM;\r\n"]},"metadata":{},"sourceType":"script"}